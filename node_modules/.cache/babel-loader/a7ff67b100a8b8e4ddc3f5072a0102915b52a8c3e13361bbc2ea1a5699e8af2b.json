{"ast":null,"code":"import { ref, onMounted, watchEffect } from \"vue\";\nimport { fetchData } from \"@/utils/axiosFetchApi\";\nexport default {\n  __name: 'SlideShow',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const images = ref([]);\n    const currentIndex = ref(0);\n    const isRunning = ref(false);\n    const delay = ref(5000);\n    const inputDelay = ref(\"\");\n    const fetchImages = async () => {\n      try {\n        const data = await fetchData(process.env.VUE_APP_URL + \"/api/images\");\n        images.value = data.images; // Fix here\n      } catch (error) {\n        console.error(\"Error fetching images:\", error);\n      }\n    };\n    const startSlideShow = () => {\n      isRunning.value = true;\n    };\n    const stopSlideShow = () => {\n      isRunning.value = false;\n    };\n    const speedUp = () => {\n      delay.value = delay.value > 1000 ? delay.value - 1000 : 1000;\n    };\n    const speedDown = () => {\n      delay.value += 1000;\n    };\n    const setCustomDelay = () => {\n      const newDelay = parseInt(inputDelay.value, 10);\n      if (!isNaN(newDelay) && newDelay >= 1000) {\n        delay.value = newDelay;\n      }\n    };\n    let interval = null;\n    const startInterval = () => {\n      interval = setInterval(() => {\n        currentIndex.value = currentIndex.value === images.value.length - 1 ? 0 : currentIndex.value + 1;\n      }, delay.value);\n    };\n    const stopInterval = () => {\n      clearInterval(interval);\n    };\n    onMounted(() => {\n      fetchImages();\n    });\n    watchEffect(() => {\n      if (isRunning.value) {\n        startInterval();\n      } else {\n        stopInterval();\n      }\n    });\n    const __returned__ = {\n      images,\n      currentIndex,\n      isRunning,\n      delay,\n      inputDelay,\n      fetchImages,\n      startSlideShow,\n      stopSlideShow,\n      speedUp,\n      speedDown,\n      setCustomDelay,\n      get interval() {\n        return interval;\n      },\n      set interval(v) {\n        interval = v;\n      },\n      startInterval,\n      stopInterval,\n      ref,\n      onMounted,\n      watchEffect,\n      get fetchData() {\n        return fetchData;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","watchEffect","fetchData","images","currentIndex","isRunning","delay","inputDelay","fetchImages","data","process","env","VUE_APP_URL","value","error","console","startSlideShow","stopSlideShow","speedUp","speedDown","setCustomDelay","newDelay","parseInt","isNaN","interval","startInterval","setInterval","length","stopInterval","clearInterval"],"sources":["/home/cuongld/Desktop/VueJS/vue3_action/src/views/SlideShow.vue"],"sourcesContent":["<template>\n  <div class=\"p-4\">\n    <div class=\"flex space-x-4 mb-4\">\n      <button @click=\"startSlideShow\" class=\"button start\">Start</button>\n      <button @click=\"stopSlideShow\" class=\"button stop\">Stop</button>\n      <button @click=\"speedUp\" class=\"button speed-up\">Speed Up</button>\n      <button @click=\"speedDown\" class=\"button speed-down\">Speed Down</button>\n      <input\n        v-model=\"inputDelay\"\n        type=\"number\"\n        placeholder=\"Custom delay (ms)\"\n        class=\"input\"\n      />\n      <button @click=\"setCustomDelay\" class=\"button set-delay\">\n        Set Delay\n      </button>\n    </div>\n    <div>\n      <img\n        v-if=\"images.length > 0\"\n        :src=\"images[currentIndex].url\"\n        alt=\"\"\n        class=\"max-w-full\"\n      />\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, watchEffect } from \"vue\";\nimport { fetchData } from \"@/utils/axiosFetchApi\";\n\nconst images = ref([]);\nconst currentIndex = ref(0);\nconst isRunning = ref(false);\nconst delay = ref(5000);\nconst inputDelay = ref(\"\");\n\nconst fetchImages = async () => {\n  try {\n    const data = await fetchData(process.env.VUE_APP_URL + \"/api/images\");\n    images.value = data.images; // Fix here\n  } catch (error) {\n    console.error(\"Error fetching images:\", error);\n  }\n};\n\nconst startSlideShow = () => {\n  isRunning.value = true;\n};\n\nconst stopSlideShow = () => {\n  isRunning.value = false;\n};\n\nconst speedUp = () => {\n  delay.value = delay.value > 1000 ? delay.value - 1000 : 1000;\n};\n\nconst speedDown = () => {\n  delay.value += 1000;\n};\n\nconst setCustomDelay = () => {\n  const newDelay = parseInt(inputDelay.value, 10);\n  if (!isNaN(newDelay) && newDelay >= 1000) {\n    delay.value = newDelay;\n  }\n};\n\nlet interval = null;\n\nconst startInterval = () => {\n  interval = setInterval(() => {\n    currentIndex.value =\n      currentIndex.value === images.value.length - 1\n        ? 0\n        : currentIndex.value + 1;\n  }, delay.value);\n};\n\nconst stopInterval = () => {\n  clearInterval(interval);\n};\n\nonMounted(() => {\n  fetchImages();\n});\n\nwatchEffect(() => {\n  if (isRunning.value) {\n    startInterval();\n  } else {\n    stopInterval();\n  }\n});\n</script>\n\n<style scoped>\n/* Plain CSS styles for the component SlideShow */\n\n.button {\n  background-color: #4a5568; /* Set your desired background color */\n  color: #ffffff; /* Set your desired text color */\n  font-weight: bold;\n  padding: 0.5rem 1rem;\n  border-radius: 0.25rem;\n  cursor: pointer;\n}\n\n.button:hover {\n  background-color: #2d3748; /* Set your desired hover background color */\n}\n\n.start {\n  background-color: #3490dc;\n}\n\n.stop {\n  background-color: #e3342f;\n}\n\n.speed-up {\n  background-color: #38a169;\n}\n\n.speed-down {\n  background-color: #f6993f;\n}\n\n.input {\n  border: 1px solid #cbd5e0; /* Set your desired border color */\n  border-radius: 0.25rem;\n  padding: 0.5rem;\n}\n\n.set-delay {\n  background-color: #805ad5;\n}\n</style>\n"],"mappings":"AA6BA,SAASA,GAAG,EAAEC,SAAS,EAAEC,WAAW,QAAQ,KAAK;AACjD,SAASC,SAAS,QAAQ,uBAAuB;;;;;;;IAEjD,MAAMC,MAAM,GAAGJ,GAAG,CAAC,EAAE,CAAC;IACtB,MAAMK,YAAY,GAAGL,GAAG,CAAC,CAAC,CAAC;IAC3B,MAAMM,SAAS,GAAGN,GAAG,CAAC,KAAK,CAAC;IAC5B,MAAMO,KAAK,GAAGP,GAAG,CAAC,IAAI,CAAC;IACvB,MAAMQ,UAAU,GAAGR,GAAG,CAAC,EAAE,CAAC;IAE1B,MAAMS,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,IAAI,GAAG,MAAMP,SAAS,CAACQ,OAAO,CAACC,GAAG,CAACC,WAAW,GAAG,aAAa,CAAC;QACrET,MAAM,CAACU,KAAK,GAAGJ,IAAI,CAACN,MAAM,CAAC,CAAC;MAC9B,CAAC,CAAC,OAAOW,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IAED,MAAME,cAAc,GAAGA,CAAA,KAAM;MAC3BX,SAAS,CAACQ,KAAK,GAAG,IAAI;IACxB,CAAC;IAED,MAAMI,aAAa,GAAGA,CAAA,KAAM;MAC1BZ,SAAS,CAACQ,KAAK,GAAG,KAAK;IACzB,CAAC;IAED,MAAMK,OAAO,GAAGA,CAAA,KAAM;MACpBZ,KAAK,CAACO,KAAK,GAAGP,KAAK,CAACO,KAAK,GAAG,IAAI,GAAGP,KAAK,CAACO,KAAK,GAAG,IAAI,GAAG,IAAI;IAC9D,CAAC;IAED,MAAMM,SAAS,GAAGA,CAAA,KAAM;MACtBb,KAAK,CAACO,KAAK,IAAI,IAAI;IACrB,CAAC;IAED,MAAMO,cAAc,GAAGA,CAAA,KAAM;MAC3B,MAAMC,QAAQ,GAAGC,QAAQ,CAACf,UAAU,CAACM,KAAK,EAAE,EAAE,CAAC;MAC/C,IAAI,CAACU,KAAK,CAACF,QAAQ,CAAC,IAAIA,QAAQ,IAAI,IAAI,EAAE;QACxCf,KAAK,CAACO,KAAK,GAAGQ,QAAQ;MACxB;IACF,CAAC;IAED,IAAIG,QAAQ,GAAG,IAAI;IAEnB,MAAMC,aAAa,GAAGA,CAAA,KAAM;MAC1BD,QAAQ,GAAGE,WAAW,CAAC,MAAM;QAC3BtB,YAAY,CAACS,KAAK,GAChBT,YAAY,CAACS,KAAK,KAAKV,MAAM,CAACU,KAAK,CAACc,MAAM,GAAG,CAAC,GAC1C,CAAC,GACDvB,YAAY,CAACS,KAAK,GAAG,CAAC;MAC9B,CAAC,EAAEP,KAAK,CAACO,KAAK,CAAC;IACjB,CAAC;IAED,MAAMe,YAAY,GAAGA,CAAA,KAAM;MACzBC,aAAa,CAACL,QAAQ,CAAC;IACzB,CAAC;IAEDxB,SAAS,CAAC,MAAM;MACdQ,WAAW,CAAC,CAAC;IACf,CAAC,CAAC;IAEFP,WAAW,CAAC,MAAM;MAChB,IAAII,SAAS,CAACQ,KAAK,EAAE;QACnBY,aAAa,CAAC,CAAC;MACjB,CAAC,MAAM;QACLG,YAAY,CAAC,CAAC;MAChB;IACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}