{"ast":null,"code":"import { ref, onMounted, watchEffect } from \"vue\";\nimport { fetchData } from \"@/utils/axiosFetchApi\";\nexport default {\n  __name: 'SlideShow',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const images = ref([]);\n    const currentIndex = ref(0);\n    const isRunning = ref(false);\n    const delay = ref(5000);\n    const inputDelay = ref(\"\");\n    let interval = null;\n    const fetchImages = async () => {\n      try {\n        // Lấy accessToken từ cookie\n        const accessToken = Cookies.get(\"accessToken\");\n\n        // Kiểm tra xem accessToken có tồn tại không\n        if (!accessToken) {\n          console.error(\"accessToken not found in cookies\");\n          return;\n        }\n        const response = await fetch(process.env.VUE_APP_URL + \"/api/images\", {\n          method: \"GET\",\n          headers: {\n            Authorization: `Bearer ${accessToken}`,\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const data = await response.json();\n        images.value = data.images;\n        console.log(\"Fetched images:\", images.value);\n      } catch (error) {\n        console.error(\"Error fetching images:\", error);\n      }\n    };\n    const startInterval = () => {\n      stopInterval(); // Stop the previous interval\n      interval = setInterval(() => {\n        if (images.value.length === 0) {\n          console.warn(\"No images available\");\n          return;\n        }\n        currentIndex.value = (currentIndex.value + 1) % images.value.length;\n        console.log(\"Current index:\", currentIndex.value);\n      }, delay.value);\n      console.log(\"Interval started with delay:\", delay.value);\n    };\n    const stopInterval = () => {\n      clearInterval(interval);\n      console.log(\"Interval stopped\");\n    };\n    const startSlideShow = () => {\n      isRunning.value = true;\n      console.log(\"Slide show started\");\n      startInterval();\n    };\n    const stopSlideShow = () => {\n      isRunning.value = false;\n      console.log(\"Slide show stopped\");\n      stopInterval();\n    };\n    const speedUp = () => {\n      delay.value = delay.value > 1000 ? delay.value - 1000 : 1000;\n      console.log(\"Speed increased. New delay:\", delay.value);\n      if (isRunning.value) {\n        startInterval();\n      }\n    };\n    const speedDown = () => {\n      delay.value += 1000;\n      console.log(\"Speed decreased. New delay:\", delay.value);\n      if (isRunning.value) {\n        startInterval();\n      }\n    };\n    const setCustomDelay = () => {\n      const newDelay = parseInt(inputDelay.value, 10);\n      if (!isNaN(newDelay) && newDelay >= 1000) {\n        delay.value = newDelay;\n        console.log(\"Custom delay set:\", delay.value);\n        inputDelay.value = \"\";\n        if (isRunning.value) {\n          startInterval();\n        }\n      }\n    };\n    onMounted(() => {\n      fetchImages();\n      console.log(\"Component mounted\");\n    });\n    watchEffect(() => {\n      if (isRunning.value) {\n        startInterval();\n      } else {\n        stopInterval();\n      }\n      console.log(\"isRunning:\", isRunning.value);\n    });\n    const __returned__ = {\n      images,\n      currentIndex,\n      isRunning,\n      delay,\n      inputDelay,\n      get interval() {\n        return interval;\n      },\n      set interval(v) {\n        interval = v;\n      },\n      fetchImages,\n      startInterval,\n      stopInterval,\n      startSlideShow,\n      stopSlideShow,\n      speedUp,\n      speedDown,\n      setCustomDelay,\n      ref,\n      onMounted,\n      watchEffect,\n      get fetchData() {\n        return fetchData;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","watchEffect","fetchData","images","currentIndex","isRunning","delay","inputDelay","interval","fetchImages","accessToken","Cookies","get","console","error","response","fetch","process","env","VUE_APP_URL","method","headers","Authorization","ok","Error","status","data","json","value","log","startInterval","stopInterval","setInterval","length","warn","clearInterval","startSlideShow","stopSlideShow","speedUp","speedDown","setCustomDelay","newDelay","parseInt","isNaN"],"sources":["/home/cuongld/Desktop/VueJS/vue3_action/src/views/SlideShow.vue"],"sourcesContent":["<template>\n  <div class=\"p-4\">\n    <div class=\"flex space-x-4 mb-4\">\n      <button @click=\"startSlideShow\" class=\"button start\">Start</button>\n      <button @click=\"stopSlideShow\" class=\"button stop\">Stop</button>\n      <button @click=\"speedUp\" class=\"button speed-up\">Speed Up</button>\n      <button @click=\"speedDown\" class=\"button speed-down\">Speed Down</button>\n      <input\n        v-model=\"inputDelay\"\n        type=\"number\"\n        placeholder=\"Custom delay (ms)\"\n        class=\"input\"\n      />\n      <button @click=\"setCustomDelay\" class=\"button set-delay\">\n        Set Delay\n      </button>\n    </div>\n    <div>\n      <img\n        v-if=\"images.length > 0\"\n        :src=\"images[currentIndex].url\"\n        alt=\"\"\n        class=\"max-w-full\"\n      />\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, watchEffect } from \"vue\";\nimport { fetchData } from \"@/utils/axiosFetchApi\";\n\nconst images = ref([]);\nconst currentIndex = ref(0);\nconst isRunning = ref(false);\nconst delay = ref(5000);\nconst inputDelay = ref(\"\");\nlet interval = null;\nconst fetchImages = async () => {\n  try {\n    // Lấy accessToken từ cookie\n    const accessToken = Cookies.get(\"accessToken\");\n\n    // Kiểm tra xem accessToken có tồn tại không\n    if (!accessToken) {\n      console.error(\"accessToken not found in cookies\");\n      return;\n    }\n\n    const response = await fetch(process.env.VUE_APP_URL + \"/api/images\", {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n        \"Content-Type\": \"application/json\",\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n\n    const data = await response.json();\n    images.value = data.images;\n    console.log(\"Fetched images:\", images.value);\n  } catch (error) {\n    console.error(\"Error fetching images:\", error);\n  }\n};\n\nconst startInterval = () => {\n  stopInterval(); // Stop the previous interval\n  interval = setInterval(() => {\n    if (images.value.length === 0) {\n      console.warn(\"No images available\");\n      return;\n    }\n\n    currentIndex.value = (currentIndex.value + 1) % images.value.length;\n    console.log(\"Current index:\", currentIndex.value);\n  }, delay.value);\n  console.log(\"Interval started with delay:\", delay.value);\n};\n\nconst stopInterval = () => {\n  clearInterval(interval);\n  console.log(\"Interval stopped\");\n};\n\nconst startSlideShow = () => {\n  isRunning.value = true;\n  console.log(\"Slide show started\");\n  startInterval();\n};\n\nconst stopSlideShow = () => {\n  isRunning.value = false;\n  console.log(\"Slide show stopped\");\n  stopInterval();\n};\n\nconst speedUp = () => {\n  delay.value = delay.value > 1000 ? delay.value - 1000 : 1000;\n  console.log(\"Speed increased. New delay:\", delay.value);\n  if (isRunning.value) {\n    startInterval();\n  }\n};\n\nconst speedDown = () => {\n  delay.value += 1000;\n  console.log(\"Speed decreased. New delay:\", delay.value);\n  if (isRunning.value) {\n    startInterval();\n  }\n};\n\nconst setCustomDelay = () => {\n  const newDelay = parseInt(inputDelay.value, 10);\n  if (!isNaN(newDelay) && newDelay >= 1000) {\n    delay.value = newDelay;\n    console.log(\"Custom delay set:\", delay.value);\n    inputDelay.value = \"\";\n    if (isRunning.value) {\n      startInterval();\n    }\n  }\n};\n\nonMounted(() => {\n  fetchImages();\n  console.log(\"Component mounted\");\n});\n\nwatchEffect(() => {\n  if (isRunning.value) {\n    startInterval();\n  } else {\n    stopInterval();\n  }\n  console.log(\"isRunning:\", isRunning.value);\n});\n</script>\n\n<style scoped>\n.button {\n  background-color: #4a5568;\n  color: #ffffff;\n  font-weight: bold;\n  padding: 0.5rem 1rem;\n  border-radius: 0.25rem;\n  cursor: pointer;\n}\n\n.button:hover {\n  background-color: #2d3748;\n}\n\n.start {\n  background-color: #3490dc;\n}\n\n.stop {\n  background-color: #e3342f;\n}\n\n.speed-up {\n  background-color: #38a169;\n}\n\n.speed-down {\n  background-color: #f6993f;\n}\n\n.input {\n  border: 1px solid #cbd5e0; /* Set your desired border color */\n  border-radius: 0.25rem;\n  padding: 0.5rem;\n}\n\n.set-delay {\n  background-color: #805ad5;\n}\n</style>\n"],"mappings":"AA6BA,SAASA,GAAG,EAAEC,SAAS,EAAEC,WAAW,QAAQ,KAAK;AACjD,SAASC,SAAS,QAAQ,uBAAuB;;;;;;;IAEjD,MAAMC,MAAM,GAAGJ,GAAG,CAAC,EAAE,CAAC;IACtB,MAAMK,YAAY,GAAGL,GAAG,CAAC,CAAC,CAAC;IAC3B,MAAMM,SAAS,GAAGN,GAAG,CAAC,KAAK,CAAC;IAC5B,MAAMO,KAAK,GAAGP,GAAG,CAAC,IAAI,CAAC;IACvB,MAAMQ,UAAU,GAAGR,GAAG,CAAC,EAAE,CAAC;IAC1B,IAAIS,QAAQ,GAAG,IAAI;IACnB,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF;QACA,MAAMC,WAAW,GAAGC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;;QAE9C;QACA,IAAI,CAACF,WAAW,EAAE;UAChBG,OAAO,CAACC,KAAK,CAAC,kCAAkC,CAAC;UACjD;QACF;QAEA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,OAAO,CAACC,GAAG,CAACC,WAAW,GAAG,aAAa,EAAE;UACpEC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACPC,aAAa,EAAG,UAASZ,WAAY,EAAC;YACtC,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;QAEF,IAAI,CAACK,QAAQ,CAACQ,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAE,uBAAsBT,QAAQ,CAACU,MAAO,EAAC,CAAC;QAC3D;QAEA,MAAMC,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;QAClCxB,MAAM,CAACyB,KAAK,GAAGF,IAAI,CAACvB,MAAM;QAC1BU,OAAO,CAACgB,GAAG,CAAC,iBAAiB,EAAE1B,MAAM,CAACyB,KAAK,CAAC;MAC9C,CAAC,CAAC,OAAOd,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IAED,MAAMgB,aAAa,GAAGA,CAAA,KAAM;MAC1BC,YAAY,CAAC,CAAC,CAAC,CAAC;MAChBvB,QAAQ,GAAGwB,WAAW,CAAC,MAAM;QAC3B,IAAI7B,MAAM,CAACyB,KAAK,CAACK,MAAM,KAAK,CAAC,EAAE;UAC7BpB,OAAO,CAACqB,IAAI,CAAC,qBAAqB,CAAC;UACnC;QACF;QAEA9B,YAAY,CAACwB,KAAK,GAAG,CAACxB,YAAY,CAACwB,KAAK,GAAG,CAAC,IAAIzB,MAAM,CAACyB,KAAK,CAACK,MAAM;QACnEpB,OAAO,CAACgB,GAAG,CAAC,gBAAgB,EAAEzB,YAAY,CAACwB,KAAK,CAAC;MACnD,CAAC,EAAEtB,KAAK,CAACsB,KAAK,CAAC;MACff,OAAO,CAACgB,GAAG,CAAC,8BAA8B,EAAEvB,KAAK,CAACsB,KAAK,CAAC;IAC1D,CAAC;IAED,MAAMG,YAAY,GAAGA,CAAA,KAAM;MACzBI,aAAa,CAAC3B,QAAQ,CAAC;MACvBK,OAAO,CAACgB,GAAG,CAAC,kBAAkB,CAAC;IACjC,CAAC;IAED,MAAMO,cAAc,GAAGA,CAAA,KAAM;MAC3B/B,SAAS,CAACuB,KAAK,GAAG,IAAI;MACtBf,OAAO,CAACgB,GAAG,CAAC,oBAAoB,CAAC;MACjCC,aAAa,CAAC,CAAC;IACjB,CAAC;IAED,MAAMO,aAAa,GAAGA,CAAA,KAAM;MAC1BhC,SAAS,CAACuB,KAAK,GAAG,KAAK;MACvBf,OAAO,CAACgB,GAAG,CAAC,oBAAoB,CAAC;MACjCE,YAAY,CAAC,CAAC;IAChB,CAAC;IAED,MAAMO,OAAO,GAAGA,CAAA,KAAM;MACpBhC,KAAK,CAACsB,KAAK,GAAGtB,KAAK,CAACsB,KAAK,GAAG,IAAI,GAAGtB,KAAK,CAACsB,KAAK,GAAG,IAAI,GAAG,IAAI;MAC5Df,OAAO,CAACgB,GAAG,CAAC,6BAA6B,EAAEvB,KAAK,CAACsB,KAAK,CAAC;MACvD,IAAIvB,SAAS,CAACuB,KAAK,EAAE;QACnBE,aAAa,CAAC,CAAC;MACjB;IACF,CAAC;IAED,MAAMS,SAAS,GAAGA,CAAA,KAAM;MACtBjC,KAAK,CAACsB,KAAK,IAAI,IAAI;MACnBf,OAAO,CAACgB,GAAG,CAAC,6BAA6B,EAAEvB,KAAK,CAACsB,KAAK,CAAC;MACvD,IAAIvB,SAAS,CAACuB,KAAK,EAAE;QACnBE,aAAa,CAAC,CAAC;MACjB;IACF,CAAC;IAED,MAAMU,cAAc,GAAGA,CAAA,KAAM;MAC3B,MAAMC,QAAQ,GAAGC,QAAQ,CAACnC,UAAU,CAACqB,KAAK,EAAE,EAAE,CAAC;MAC/C,IAAI,CAACe,KAAK,CAACF,QAAQ,CAAC,IAAIA,QAAQ,IAAI,IAAI,EAAE;QACxCnC,KAAK,CAACsB,KAAK,GAAGa,QAAQ;QACtB5B,OAAO,CAACgB,GAAG,CAAC,mBAAmB,EAAEvB,KAAK,CAACsB,KAAK,CAAC;QAC7CrB,UAAU,CAACqB,KAAK,GAAG,EAAE;QACrB,IAAIvB,SAAS,CAACuB,KAAK,EAAE;UACnBE,aAAa,CAAC,CAAC;QACjB;MACF;IACF,CAAC;IAED9B,SAAS,CAAC,MAAM;MACdS,WAAW,CAAC,CAAC;MACbI,OAAO,CAACgB,GAAG,CAAC,mBAAmB,CAAC;IAClC,CAAC,CAAC;IAEF5B,WAAW,CAAC,MAAM;MAChB,IAAII,SAAS,CAACuB,KAAK,EAAE;QACnBE,aAAa,CAAC,CAAC;MACjB,CAAC,MAAM;QACLC,YAAY,CAAC,CAAC;MAChB;MACAlB,OAAO,CAACgB,GAAG,CAAC,YAAY,EAAExB,SAAS,CAACuB,KAAK,CAAC;IAC5C,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}